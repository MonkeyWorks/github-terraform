# This is a basic workflow to help you get started with Actions

name: Terraform CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    paths:
      - 'GithubActionsM8/**'

  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./GithubActionsM8

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  dev_stage:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: 'Terraform init'
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform workspace select or create dev'
        run: terraform workspace select dev || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform apply dev'
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Test dev'
        run: curl ${terraform output -raw primary_web_endpoint}
        working-directory: ${{ env.WORKING_DIR }}

  stage_prod:
    needs: dev_stage
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: 'Terraform init'
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform workspace select or create stage'
        run: terraform workspace select stage || terraform workspace new stage
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform apply stage'
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Test stage'
        run: curl ${terraform output -raw primary_web_endpoint}
        working-directory: ${{ env.WORKING_DIR }}

  prod:
    needs: stage_prod
    runs-on: ubuntu-22.04
    environment:
      name: production
      url: ${{ steps.get_web_endpoint.outputs.WEB_ENDPOINT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: 'Terraform init'
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform workspace select or create prod'
        run: terraform workspace select prod || terraform workspace new prod
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform apply prod'
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Test prod'
        run: curl ${terraform output -raw primary_web_endpoint}
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Get Web Endpoint'
        id: get_web_endpoint
        run: echo "WEB_ENDPOINT=$(terraform output -raw primary_web_endpoint)" >> $GITHUB_OUTPUT
        working-directory: ${{ env.WORKING_DIR }}


